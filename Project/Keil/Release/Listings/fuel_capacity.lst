C51 COMPILER V9.60.7.0   FUEL_CAPACITY                                                     05/24/2025 16:58:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE FUEL_CAPACITY
OBJECT MODULE PLACED IN .\Release\Objects\fuel_capacity.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\fuel_capacity.c LARGE OPTIMIZE(9,SIZE) BROWSE ORDER INTVECTOR
                    -(0X000C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.
                    -\Release\Listings\fuel_capacity.lst) OBJECT(.\Release\Objects\fuel_capacity.obj)

line level    source

   1          #include "fuel_capacity.h"
   2          
   3          volatile u32 fuel_capacity_scan_cnt = 0; // 扫描时间计数，在1ms定时器中断中累加
   4          volatile u32 fuel_adc_val = 0;
   5          volatile u32 fuel_adc_scan_cnt = 0; // 在更新时间到来前，记录adc扫描的次数
   6          
   7          volatile u8 fuel_percent = 0xFF;
   8          
   9          // static volatile u8 last_fuel_percent = 0xFF; // 记录上一次检测到的油量百分比
  10          
  11          void fuel_capacity_scan(void)
  12          {
  13   1          adc_sel_pin(ADC_PIN_FUEL); // 内部至少占用1ms
  14   1          adc_val = adc_getval();
  15   1          // printf("fuel adc %u \n", adc_val);
  16   1      
  17   1          fuel_adc_val += adc_val;
  18   1          fuel_adc_scan_cnt++;
  19   1      
  20   1          // fuel_capacity_scan_cnt += ONE_CYCLE_TIME_MS;
  21   1          if (fuel_capacity_scan_cnt >= FUEL_CAPACITY_SCAN_TIME_MS)
  22   1          {
  23   2              // 如果到了扫描更新时间，
  24   2              // bit flag_is_update_percent = 1; // 是否更新百分比,0--不更新,1--更新
  25   2              fuel_capacity_scan_cnt = 0;
  26   2              fuel_adc_val /= fuel_adc_scan_cnt; // 求出扫描时间内得到的ad平均值
  27   2              fuel_adc_scan_cnt = 0;
  28   2      
  29   2      #ifdef USE_MY_DEBUG
  30   2      #if USE_MY_DEBUG
                      // printf("fuel adc val %lu \n", fuel_adc_val);
              #endif // #if USE_MY_DEBUG
  33   2      #endif // #ifdef USE_MY_DEBUG
  34   2      
  35   2              // 先确定油量百分比的大致范围：
  36   2              if (fuel_adc_val < FUEL_MAX_ADC_VAL + (FUEL_90_PERCENT_ADC_VAL - FUEL_MAX_ADC_VAL) / 3)
  37   2              {
  38   3                  fuel_percent = 100;
  39   3              }
  40   2              else if (fuel_adc_val < (FUEL_90_PERCENT_ADC_VAL - (FUEL_90_PERCENT_ADC_VAL - FUEL_MAX_ADC_VAL) / 
             -3))
  41   2              {
  42   3                  fuel_percent = 90;
  43   3              }
  44   2              else if (fuel_adc_val < (FUEL_80_PERCENT_ADC_VAL - (FUEL_80_PERCENT_ADC_VAL - FUEL_90_PERCENT_ADC_
             -VAL) / 3))
  45   2              {
  46   3                  fuel_percent = 80;
  47   3              }
  48   2              else if (fuel_adc_val < (FUEL_70_PERCENT_ADC_VAL - (FUEL_70_PERCENT_ADC_VAL - FUEL_80_PERCENT_ADC_
             -VAL) / 3))
  49   2              {
  50   3                  fuel_percent = 70;
C51 COMPILER V9.60.7.0   FUEL_CAPACITY                                                     05/24/2025 16:58:02 PAGE 2   

  51   3              }
  52   2              else if (fuel_adc_val < (FUEL_60_PERCENT_ADC_VAL - (FUEL_60_PERCENT_ADC_VAL - FUEL_70_PERCENT_ADC_
             -VAL) / 3))
  53   2              {
  54   3                  fuel_percent = 60;
  55   3              }
  56   2              else if (fuel_adc_val < (FUEL_50_PERCENT_ADC_VAL - (FUEL_50_PERCENT_ADC_VAL - FUEL_60_PERCENT_ADC_
             -VAL) / 3))
  57   2              {
  58   3                  fuel_percent = 50;
  59   3              }
  60   2              else if (fuel_adc_val < (FUEL_40_PERCENT_ADC_VAL - (FUEL_40_PERCENT_ADC_VAL - FUEL_50_PERCENT_ADC_
             -VAL) / 3))
  61   2              {
  62   3                  fuel_percent = 40;
  63   3              }
  64   2              else if (fuel_adc_val < (FUEL_30_PERCENT_ADC_VAL - (FUEL_30_PERCENT_ADC_VAL - FUEL_40_PERCENT_ADC_
             -VAL) / 3))
  65   2              {
  66   3                  fuel_percent = 30;
  67   3              }
  68   2              else if (fuel_adc_val < (FUEL_20_PERCENT_ADC_VAL - (FUEL_20_PERCENT_ADC_VAL - FUEL_30_PERCENT_ADC_
             -VAL) / 3))
  69   2              {
  70   3                  fuel_percent = 20;
  71   3              }
  72   2              else if (fuel_adc_val < (FUEL_10_PERCENT_ADC_VAL - (FUEL_10_PERCENT_ADC_VAL - FUEL_20_PERCENT_ADC_
             -VAL) / 3))
  73   2              {
  74   3                  fuel_percent = 10;
  75   3              }
  76   2              else
  77   2              {
  78   3                  fuel_percent = 0;
  79   3              }
  80   2      
  81   2      #ifdef USE_MY_DEBUG
  82   2      #if USE_MY_DEBUG
                      // printf("fuel percent nearly %bu\n", fuel_percent);
              #endif // #if USE_MY_DEBUG
  85   2      #endif // #ifdef USE_MY_DEBUG
  86   2      
  87   2              // 再根据死区限制油量百分比
  88   2              if (fuel_adc_val > FUEL_MIN_ADC_VAL - ((FUEL_MIN_ADC_VAL - FUEL_10_PERCENT_ADC_VAL) / 3))
  89   2              {
  90   3                  // 0%油量
  91   3                  fuel_percent = 0;
  92   3              }
  93   2              else if (fuel_adc_val < (FUEL_10_PERCENT_ADC_VAL + (FUEL_MIN_ADC_VAL - FUEL_10_PERCENT_ADC_VAL) / 
             -3) &&
  94   2                       fuel_adc_val > FUEL_10_PERCENT_ADC_VAL - (FUEL_10_PERCENT_ADC_VAL - FUEL_20_PERCENT_ADC_V
             -AL) / 3)
  95   2              {
  96   3                  // 10%油量
  97   3                  fuel_percent = 10;
  98   3              }
  99   2              else if (fuel_adc_val < (FUEL_20_PERCENT_ADC_VAL + (FUEL_10_PERCENT_ADC_VAL - FUEL_20_PERCENT_ADC_
             -VAL) / 3) &&
 100   2                       fuel_adc_val > FUEL_20_PERCENT_ADC_VAL - (FUEL_20_PERCENT_ADC_VAL - FUEL_30_PERCENT_ADC_V
             -AL) / 3)
 101   2              {
 102   3                  // 20%油量
C51 COMPILER V9.60.7.0   FUEL_CAPACITY                                                     05/24/2025 16:58:02 PAGE 3   

 103   3                  fuel_percent = 20;
 104   3              }
 105   2              else if (fuel_adc_val < (FUEL_30_PERCENT_ADC_VAL + (FUEL_20_PERCENT_ADC_VAL - FUEL_30_PERCENT_ADC_
             -VAL) / 3) &&
 106   2                       fuel_adc_val > FUEL_30_PERCENT_ADC_VAL - (FUEL_30_PERCENT_ADC_VAL - FUEL_40_PERCENT_ADC_V
             -AL) / 3)
 107   2              {
 108   3                  // 30%油量
 109   3                  fuel_percent = 30;
 110   3              }
 111   2              else if (fuel_adc_val < (FUEL_40_PERCENT_ADC_VAL + (FUEL_30_PERCENT_ADC_VAL - FUEL_40_PERCENT_ADC_
             -VAL) / 3) &&
 112   2                       fuel_adc_val > FUEL_40_PERCENT_ADC_VAL - (FUEL_40_PERCENT_ADC_VAL - FUEL_50_PERCENT_ADC_V
             -AL) / 3)
 113   2              {
 114   3                  // 40%油量
 115   3                  fuel_percent = 40;
 116   3              }
 117   2              else if (fuel_adc_val < (FUEL_50_PERCENT_ADC_VAL + (FUEL_40_PERCENT_ADC_VAL - FUEL_50_PERCENT_ADC_
             -VAL) / 3) &&
 118   2                       fuel_adc_val > FUEL_50_PERCENT_ADC_VAL - (FUEL_50_PERCENT_ADC_VAL - FUEL_60_PERCENT_ADC_V
             -AL) / 3)
 119   2              {
 120   3                  // 50%油量
 121   3                  fuel_percent = 50;
 122   3              }
 123   2      
 124   2              else if (fuel_adc_val < (FUEL_60_PERCENT_ADC_VAL + (FUEL_50_PERCENT_ADC_VAL - FUEL_60_PERCENT_ADC_
             -VAL) / 3) &&
 125   2                       fuel_adc_val > FUEL_60_PERCENT_ADC_VAL - (FUEL_60_PERCENT_ADC_VAL - FUEL_70_PERCENT_ADC_V
             -AL) / 3)
 126   2              {
 127   3                  // 60%油量
 128   3                  fuel_percent = 60;
 129   3              }
 130   2              else if (fuel_adc_val < (FUEL_70_PERCENT_ADC_VAL + (FUEL_60_PERCENT_ADC_VAL - FUEL_70_PERCENT_ADC_
             -VAL) / 3) &&
 131   2                       fuel_adc_val > FUEL_70_PERCENT_ADC_VAL - (FUEL_70_PERCENT_ADC_VAL - FUEL_80_PERCENT_ADC_V
             -AL) / 3)
 132   2              {
 133   3                  // 70%油量
 134   3                  fuel_percent = 70;
 135   3              }
 136   2              else if (fuel_adc_val < (FUEL_80_PERCENT_ADC_VAL + (FUEL_70_PERCENT_ADC_VAL - FUEL_80_PERCENT_ADC_
             -VAL) / 3) &&
 137   2                       fuel_adc_val > FUEL_80_PERCENT_ADC_VAL - (FUEL_80_PERCENT_ADC_VAL - FUEL_90_PERCENT_ADC_V
             -AL) / 3)
 138   2              {
 139   3                  // 80%油量
 140   3                  fuel_percent = 80;
 141   3              }
 142   2              else if (fuel_adc_val < (FUEL_90_PERCENT_ADC_VAL + (FUEL_80_PERCENT_ADC_VAL - FUEL_90_PERCENT_ADC_
             -VAL) / 3) &&
 143   2                       fuel_adc_val > FUEL_90_PERCENT_ADC_VAL - (FUEL_90_PERCENT_ADC_VAL - FUEL_MAX_ADC_VAL) / 3
             -)
 144   2              {
 145   3                  // 90%油量
 146   3                  fuel_percent = 90;
 147   3              }
 148   2              else if (fuel_adc_val < (FUEL_MAX_ADC_VAL + ((FUEL_90_PERCENT_ADC_VAL - FUEL_MAX_ADC_VAL) / 3)))
 149   2              {
 150   3                  // 100%油量
C51 COMPILER V9.60.7.0   FUEL_CAPACITY                                                     05/24/2025 16:58:02 PAGE 4   

 151   3                  fuel_percent = 100;
 152   3              }
 153   2              else
 154   2              {
 155   3                  // 如果检测到的ad值不在死区范围内,不更新油量
 156   3                  // flag_is_update_percent = 0;
 157   3              }
 158   2      
 159   2      #ifdef USE_MY_DEBUG
 160   2      #if USE_MY_DEBUG
                      // printf("fuel percent %bu\n", fuel_percent);
              #endif // #if USE_MY_DEBUG
 163   2      #endif // #ifdef USE_MY_DEBUG
 164   2      
 165   2              fun_info.fuel = fuel_percent;
 166   2              fuel_adc_val = 0xFF;
 167   2              flag_get_fuel = 1;
 168   2          } // if (fuel_capacity_scan_cnt >= FUEL_CAPACITY_SCAN_TIME_MS)
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    643    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     13    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
